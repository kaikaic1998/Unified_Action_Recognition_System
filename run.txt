BOTSORT:

py demo.py video --path breakdance.mp4 -f yolox/exps/example/mot/yolox_x_mix_det.py -c pretrained/bytetrack_x_mot17.pth.tar --with-reid --fuse-score --fp16 --fuse --save_result

py demo.py video --path breakdance.mp4 -f yolox/exps/example/mot/yolox_x_mix_det.py -c pretrained/bytetrack_x_mot17.pth.tar --save_result

py demo.py video --path breakdance.mp4 -f yolox/exps/example/mot/yolox_x_mix_mot20_ch.py -c pretrained/bytetrack_x_mot20.tar --save_result

fastest: 54~68 fps
py demo.py video --path breakdance.mp4 -f yolox/exps/example/mot/yolox_nano_mix_det.py -c pretrained/bytetrack_nano_mot17.pth.tar --save_result --fuse

YOLOv7:
py mc_demo_yolov7.py --weights pretrained/yolov7-d6.pt --source breakdance.mp4 --fuse-score --agnostic-nms

py mc_demo_yolov7.py --weights pretrained/yolov7-d6.pt --source breakdance.mp4


PYSKL:

py demo_skeleton.py video/ntu_sample.avi video/demo.mp4 --config configs/stgcn++/stgcn++_ntu120_xsub_hrnet/j.py --checkpoint http://download.openmmlab.com/mmaction/pyskl/ckpt/stgcnpp/stgcnpp_ntu120_xsub_hrnet/j.pth

py demo_skeleton.py video/tennis.mp4 video/demo.mp4 --config configs/stgcn++/stgcn++_ntu120_xsub_hrnet/j.py --checkpoint http://download.openmmlab.com/mmaction/pyskl/ckpt/stgcnpp/stgcnpp_ntu120_xsub_hrnet/j.pth

py demo_skeleton.py video/ntu_sample.avi video/demo.mp4 --config configs/stgcn++/stgcn++_ntu120_xset_hrnet/j.py --checkpoint http://download.openmmlab.com/mmaction/pyskl/ckpt/stgcnpp/stgcnpp_ntu120_xset_hrnet/j.pth

py demo_skeleton.py video/ntu_sample.avi video/demo.mp4 --config configs/stgcn++/stgcn++_ntu120_xset_hrnet/j.py --checkpoint .cache/stgcnpp_ntu120_xset_hrnet.pth

training: 

# bash dist_train.sh ${CONFIG_FILE} ${NUM_GPUS} [optional arguments]
# For example: train STGCN++ on NTURGB+D XSub (3D skeleton, Joint Modality) with 1 GPUs, with validation, and test the last and the best (with best validation metric) checkpoint.
bash dist_train.sh configs/stgcn++/stgcn++_ntu120_xset_hrnet/j.py 1 --validate --test-last --test-best
